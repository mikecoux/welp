'use client'

import usePlacesAutocomplete, {
    getGeocode,
    getLatLng,
  } from "use-places-autocomplete";
  import {
    Combobox,
    ComboboxInput,
    ComboboxPopover,
    ComboboxList,
    ComboboxOption,
  } from "@reach/combobox";
  import "@reach/combobox/styles.css";

export default function SearchLocation(
    { onChange }: { onChange:any }
) {
    const {
        ready,
        value,
        setValue,
        suggestions: {status, data},
        clearSuggestions
    } = usePlacesAutocomplete({
        // filters the results generated by Places API
        // 'geocode' instructs the service to only return geocoding results, rather than business results
        // alternatively, try '(regions)'
        requestOptions: {
            types: ['geocode']
        }
    });

    // sends data back to the react-hook-form controller wrapper component
    const handleSelect = async (address:string) => {
        setValue(address, false);
        clearSuggestions();
    
        const results = await getGeocode({ address });
        const { lat, lng } = await getLatLng(results[0]);
        onChange(lat + "," + lng);
      };

    return (
        <Combobox onSelect={handleSelect}>
            <ComboboxInput 
                value={value} 
                onChange={(e)=> {
                    setValue(e.target.value)
                }} 
                disabled={!ready}
                className="rounded outline-none" 
                placeholder="city, zip code, ..."
            />
            <ComboboxPopover>
                <ComboboxList>
                    {status === "OK" &&
                        data.map(({ place_id, description }) => (
                        <ComboboxOption key={place_id} value={description} />
                    ))}
                </ComboboxList>
            </ComboboxPopover>
        </Combobox>
    )
}

